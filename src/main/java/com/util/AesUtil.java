package com.util;

import com.alibaba.fastjson.JSONObject;
import com.json.test.GsonUtil;
import org.apache.commons.codec.binary.Base64;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.security.MessageDigest;
import java.util.Arrays;

public class AesUtil {

    private static final Logger log = LoggerFactory.getLogger(AesUtil.class);

    private static SecretKeySpec generateSecretKey(String password) {
        try {
            byte[] key = password.getBytes("UTF-8");
            MessageDigest sha = MessageDigest.getInstance("SHA-1");
            key = sha.digest(key);
            key = Arrays.copyOf(key, 16); // use only first 128 bit
            return new SecretKeySpec(key, "AES");
        } catch (Exception e) {
            log.error("Error while generating secret key", e);
        }
        return null;
    }


    public static String encrypt(String strToEncrypt, String password) {
        try {
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
            cipher.init(Cipher.ENCRYPT_MODE, generateSecretKey(password));
            return Base64.encodeBase64URLSafeString(cipher.doFinal(strToEncrypt.getBytes("UTF-8")));
        } catch (Exception e) {
            log.error("Error while encrypting", e);
        }
        return "";

    }

    public static String decrypt(String text) {
        try {
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
            cipher.init(Cipher.DECRYPT_MODE, generateSecretKey("5FzrVr8U7jmaAuRTk3BNqeJA"));
            return new String(cipher.doFinal(Base64.decodeBase64(text)));
        } catch (Exception e) {
            log.error("Error while decrypting", e);
        }
        return "";
    }

    public static void main(String[] args) {
        String s = decrypt("eX_3wKvdNxF7mkZf95l4mNZtf78bvGJsKzQhlrqNkwADMlfbjctNcp_4GgHVVLKZarB0n2kmy1-l9wEzuNhy_N7NXgl7u2TJN2xOoVvyfg3VbM2aSA99INBQ2wpxCI4MWsSsDdat3HBzMSRyQQrWjhf8f7EYuPhrx9d0vi92_0rXY2ImFxolsbXE0QxkyvFOpGx6iZrSY-vRu-XySLTqKvGzhrYbKw4dfFr4GUkv1DxoOnhXIpWTbvWicDRAHy7I208WKylKM0t4B792wXQQuPiRLZwKO_GWh598wGz31VE0vJYlPLqOR7wGitPaVlPe9za949jZ4DveQIeKhfMIrMCYN-qlUT9UEFnOldWEfYAQd4NXlnWpot6Y65XeE8ObBFG0aFBLG9_Y7ooFylfE8A3KnGKy_WfCrI2iG0T9u6-aD6ZL_J-TCSEn70U0k1z8fitZwIdrTOlCb-Pjp32Zy4r6s0dmfKF-p59Ylzy3rtiUoZRLzy4hPNL04ebFlV6fNH6qcy6mcq5Sr8rOhNhV_r8DBJYrnxQcGrtazvUjK-gSKn0W_UdE2e5M5XDspbv8xfcwzKro5IJuxyL8Opojl72lmp9e0zQZW9YlMj_h5q964m-Xq4psLYdBgiTMU7iqoSvK1hV-eC2GWdxN9VkpGH4wu32NBt0421qqLZvLjFtb316h5XhBcXJ5XdORWQlQU2RCfSkuA2my2THmviFHpen5gIvcJxuaKZ23xXaFTiXn9_WfWVnl9iXGiwXQIna5Q5U5H4LDB1ow-fZtJO1CSqJitbNMJHRPMjufDP-VepfvjcHqcPgRiM1y-LbJQFxzjhTlgC7RkD7vNbplwlMXiqF-LN_IcUlg2SdRR1N9fxW_05bcRj-k3AGdnQsFGtRaSl_2a5_sZjVEFqRqZr9DROcehAoX8tnw6E2qatNx64yL1vHvMl94-q-6aso9DIhIwMnL7t57Ety-wX8KvS9kWYk0QLzD0USpAufMf68_S5XLAm-fow_ME7zNK8-CXeYZNN6gXzSHFaMa9Hw4-vxDhEmiwD23kcRT82thPH5GjWDtt-tp4isvJYUhQiKXTn3Feyl2vIIzOCiwTJQhmApEayGeeoDY4oBpQQ4HtBvCcDsqhznKODhngao9zXu8ooIhOfL81c6FIIPEMoKPiOmo5pi5VOGR_u1LOCW2JrVNPrhl2SMrd1teaNNFfL5iT3IqpsOeO_z0Z31qJ7JFyR3aoNIOrMzlygngXrZT9TSeaFu0lHnm_8GTC2QTnlOoEcKsb1gwKsgOcxHcj7amQqXEJvyw3MQEiJRRAYNdjx8SK90iP_wdLRMlYkSEYIcuyGC__LDcxASIlFEBg12PHxIr3TfBQeG1j3IcYDaawLYpj7GheKV2P6qKe67O277mxBdso3FqBARkbtfUfEXxwO-PWQF_XvyouViEry7LgvamTYLD-88aCSPvPNJi8LaNErXlqMHxoAaNN7e_h2cNZq2G0egm8caPu0TmGMcL8pSLKEgdXmjo_rX2q5dMYMdHKVVOyWh-9Zq2qsUoGk6msU5v2KJysgg9X1rLv-nxRyr4THhCFQ8IZ7UzwvnSvTqV1OZgN9ZH4QYf4xWr6L0kI4ZswIIFs2NuyqDe47GZ5kMvZuyjYlJ15zV_p8YhKaMEs_0-F5ZIya0pG5w0DyuxztuqsS1T3EUkIURrQcSgWW9-Ajj4t5jDKgneefr7Zb5rKpsF5tUaJcqFAYGW4DLD-2ecnXLpEe4oJeT7Dte1vYVEoXc4bbyNpO2K5JTLSMsZUPey0rjsy141BcIutMuwwdjD2CKqHNo2mJT03xQdDhBMm0MKJQOBgH_vG7LXQvnD8kIFBgCMvSQ6aXqBKkKvfn3sSH7sf5D59EgiH1xht2EnW5B5ORYkJQSK0TOV4m9KzbVIhLDHTsQC9lz0Kl-1IJkK_abB5QCiCMzOQlms82tI0r37UPknTJgNDgm807hm73Surmo-tsSamhLwFKFhJCdeoaJitbNMJHRPMjufDP-VepedhPUSlBgoVcW8yQQgSfgqBRLBadMJW0-HBsU0_l6F-zedPHoPGAX7g0UBdn9aw5oqjpUEeoq51dGJkvr4RtxvZvEs9OY7ReTz_6Cjzi2t5WVyMMPsxhllnwbScFAaBgeE-MzEwAUPuvhkldfrovl2dGFXven25l9rO_nszqYyVx2Yu9aZurmTrd0t1tLkTTgLQNb83Ua5hZ-5uvSvqSuFC7rqX1UagoOGzs6Al0gkjiEMHDpOltiWjLHJhpqAZEHL2LAqMoHtJ_lSxNPIjpNoRrUfya7ewTqDdHmkrVqPNeDlHcmPcIK5YxPrBnkZLNhYJOk5n9PuW9Zyd8fu0j8t1Kx3AlhkQJB2oUcgvU2owOhIgNX5e0HeG9eQX92mnAolScdTDauY_HFlP9G4y9E2WbKbbi4zvCSoNPX9V25A6hYTT2o5tlAnEUsUJHs6j1qqxJCqy04-Dgr8a3E51dxofr-si09ePgqV5VJxTONhRu4ril4E-QXy08Uo0bqBNsdyrZrsd9V0jSUzXSDu8Rl8s0ouwpkqFzz04gh94RezHSqqKexG_8f3pHLFjXNBMEzbwgecBKssoKnjde0cWB5d9xH9D0CtARFM2ypSqesqk71HGvpYUDl5f1XTb_haJF_zRPbbqag78vvj5n48XgvYcJQknHUJXqJPtVEobj55tpt0tFvd0IccKyQSdPTGLo_7oTSciUdKZl5NMIblHk50owDS_8LTXgiHSgDmzGI5KmdWGytlLY6I0LzVgzOGu59p0L-yTfimOy5PjiMf_m5EGtMhVpk0LxYRggE38nGRYlDSLxCMxBBiZclz3zNHZH6j14jkmuR2MIQVc5w52fg0Cl-OXd2tki04COr-sLKXsGdWGytlLY6I0LzVgzOGu58395i4P4kl8DiskEnA4Zb8UxIqUAPJANIWHjUmqNKjYx4nUekgGClR1t7JGgA-P5JLjjoBgcIzCoNj_FX7_M2ONl5BGnqS2dX9UeSFZNfOsZ1DXyaTU9EKx2Tn2OearaLaNdniZ1qC0n4BljaI23mS-8TQlSxJybdpysFIxUpsE6HWwBRSepm1jkQvIbc8OIn5hvJL2-O8FDRHTms3fMW7kjbVun-oo3KlFIZA7xW-Lh8oX9rOz4y-ok_EdlXygjDV6EstRMaWskdOMBOUOi_56aTV_zma-ZEIEnLZk0PsPBlwI8wIuhPPLMCkaeVj1A1J9KSCB6aUwO2f8Djs10euDcqcYrL9Z8KsjaIbRP27r0oYXyXrDWx5deXo18AtNw7RvoyM30dUX9Q4QecGe44HS446AYHCMwqDY_xV-_zNjiP3azvs5KlTRN2x_UctWNDVHAEpCWqo8s0cUnJP0xdkyEvx7yiGEc6IOBq-AtSxezTVobhRjHOmukB4WlAlfjZysnk94hY0BGfFATkbL6rCTTqKu9kuw7rgLqFPRCMdZf2K7fhvUMxOtioW8z7piOa9-rmw2w4ZRT8I1F30vjHsQ3Q0BJBSFgbOiXmr4kzNRrFqV5jOpGZNpgoBgDnAcwaAXrPdzF_w0iYjxOU2nQ6Mr8Fp-RvNxutDpi6AC3TXLiTQrOmigYxswvYwEPzhpJ0pMCo1zTNDIJE6qBAFVCuysDLAaNW9aq-MYsIncY9zZZoywOFnUKimE-xOl6MhLfOLkJva1StwcGOHJd8EN44CFT9uCykqY04QlXqPedBxWXql8yxBqKQoqT1WxbxzPlLFYmrHBFfiKigTkLohY6EVRaOvOjoiBuwg1u8UQqABxgfZFb9tFtsafJJAz2W2ehiI2jsiTRjizuL5hkSRqH9ODcqcYrL9Z8KsjaIbRP27ryqLi7SRIX8S_tOWX9BY6wUV2QyCU5Vt61POR41vIPw0ujt6O5q0VzFrwxBuRrztn_qYH9N3OvdZ9LOyV2T9j10Z1sbYo-TG0mYa9jeyQFv8MVWAQ47LPVaf6X-3-HgAONtSFR_kzyP22J3mCo7Vuz655CVQANk2fUCC1dQxN6SF4gnlG8FZF1l91KYwdkGbQR0o4phoix5OQIFitDMJSm8Bf178qLlYhK8uy4L2pk2CIGKOGZK_VNLhyb46ScFmtYdeYLAxPSuh2QsqeD63P7XugCSuI3T9TCo20qOYTheHY9KYQW2vEYJElKmAYjEuFmWNcl-qrrRap1avW-jMZB_E3c_mQxCNERbqick28oIrsi3ualjps0syyKd3yftlxmpvU_vfQnMLPtJCHp5RoBcbPlP0wsNwGLd5OMQ83x6nGDHAnweT6Mcj63IbE0BjLeqy8cJ5nupYgqOSJao-jue22l_EjkicaFb-qzsqQTTuiQXZrzImfkG57wcH0M9DFSRroBBYvSgjhmsK3mcGSCeVqc5ksos280HRO3yVnXl3DIok-6sxk2ZjJeLWOCqxTzlfY8M26d7h7cCRwI3tF_Cv4nQ7hnApKBT9_-SgWB1O1PmTEJa63DQi30nT_GxlFY8mxu-8Z891-govEZKZakRy3lHyzYORc7nDu8Io1u8hCSe79Km-1Kkh4rWo8rWYp0knZ9tw8CnFaX5IJ1R0SxxiD4bECdCIcfQafyOC89CYTxy8zIF7A3KygUt_wyY8c5qsKZXTpHo30cHtNTf319jUUcc16UpVmhTYZ65KVxZNBjMJXAR7DYaD-lCLlQMoNi8YbqFIa4g8_p3f0BRV7vGB2WrU-QBr6VulrtCqTX1kSaLAPbeRxFPza2E8fkaNYKhA39Z3U7MLd9kRN30Fv0RuT5Fuqaiy1rVyO8leKEkDd3gug36A5t4AZanzCHm3DYzB_ioi3AMJEy642bBl9rbedoyKpblTdNQyC1DFDwIVfsB6_FK--F4jC0yCXCuBve7EyEmAGW5-4JYINnIe3DwsnGXXO38MR0Nia5sV3Rgxx5SAWyV2hHx_h8gZ_l1vm5cfuAuuUvhD9YrlUh4B_LQ7bQvCCmIWyIY5tWxsBBLPgSVVzh9tSfpVYAsZmZJbI4RM7REbTn9zezrF5IfGyygCFIUyNOAk6fezUP7ycvNitjPlC-unwfqqqPgmKazVOAQdbqcI3t20xnxruvOwKjuA0E3ww34henLhNsEDgAMCgkDqTQlwzvkEiq8Ha9o3uhUBENt-sqPpmzwERxlv_8zKpo5y7WUgN8KpkU9SoQFfdLAAkBUjiWKxOCyCFUGpuquQGt2iDpDdzt4gwaxehEMmy9BWjSMu2is4C77U2hXl0UzKeeBgCdtu7iFKNeAhmaealk9nMG_sqpgSXefHyT4VjOHDpDaiDUVNg8exIXucZe4yC-9ukeTnO_yq6CpwE8arktjI6geDFie8XhTkFRUFT-7x5DzdrbZ1bt03ZSeBD7FZ9Cf_E-tgyoc63SJ6BtLEpjAjeh7v0HHDNmcpN8mj0PROvuaWTCnUPwyJ8jBZQ5UKo46PSi4nwNWQ6RQALTZKOgEAgUCYSMJTwLJnPzpFEO7Tc6fXan9ixoTjE6b_BAGYgHl2BrQKaWUbB2CpM0pbBA0n8aLBxqcvkbpyPQ7Jxccr-rh3Z3XEazZnXtsRnKNGwMudz0LyYZl7RjJQ44zMeJwJUPxu0rMTcsLHXzn_G1p4ZdkKmXfDqAWjJg6ZdQKNOKh6oY90ylfvoTMQHNIhk8WYcopih0apiZUvw5jnuhcZdG_mpKd9q2QpL-cthrzBK5kaGZa4ZVhq_MGbPuMNHnOOhnGgcOhgqvpCE3mEY6qqKYg0_5leF3K3J5uktbIb4rsK2lcAQlL3-OpM9t2oBm9tcEWDId0ZeflqJiWKxZBQzii_-_l4YsCTcalszn5EXMk8lZ7f0Hp4KJqLE1k5kuRFSzsUqqCI9h6DxlcW8TTcpmwjGQsALekZXqo3u9Yc1_2GQvU_x1umoMot18Hb_84wvdmKkiGY2RthKqta40Ip8kuw1lOkBrqlL0KSi7a-9HQyQqCi-JDrClRbG9PtHcTE3tRls2JqgL1C1ms0V8VPbRsSBSVkH-w4ygDQqIBWi50YcJ6ohrERLElmcpQyOq-7XFijd3h9_tIwD8glGcnoMzNT_Tmd5NskAEVWwDrLBlmqU7M2GUq318siED0Ay-ICKpQFz_TphL4v889AJ1d5E5RdONoE9Qit09B1pCOBAsqI5RBVQl-38ctb39ifZX7GdokkLbdJnC4oOqPxZ656NSdQ4lljjE-jdH1TIRASCZdf9fx0_RuroGt8Y0ol1nqsD-mGyC9DmYGJi-Za_M2ZweeasMpj7BuK-VLZ00TFJyWvsk-dD04yqLeqIeRP7UQI2BH-Dl2xY3nXQ81RYPvI9KQVlTrno5OennJ-bsQFNxffYHtQpy3yh1kT5Hz-_Qj1qpJD2XoGX3qZMMtC-QWkfZVt0B748YsEsJBG0FNcTHpU5DyufpSKg3lDEmu5B_RVf_QQuQw6qeZ-5CSQBXijHFp3bfjbVEKW6zkDad9xMYuyusHVrkNdt0tg87vWHNf9hkL1P8dbpqDKLdfWYXi8eDpo61pwTchP_h5OuRAO7XcogaWaAyXWCFyNs8BnJey6Jbv4IhZ2wMMKBQIdkWzZEzniV6BAtO-jgrfxMEMju7VMkk9ZUcdblVedA_4mgjDW1uuWwGzL9rNnNiXc99Lg5aT5f-zK_QDBPqcR156eOHfZE9Zcgup4uid7FAHYfTT9V_pjdaVkarJqAQ61_UejOqYxeNo2VQLULTusnJeqSmvyTSyzUC6zudyGCiYze5zc-siQ3y4mf0SEA-Z4-zPhStA5-X-uvBIGbN4r_iaCMNbW65bAbMv2s2c2JdztAC_-6b8asMdfKQf_J1GnwO4Q63NcJNS4EMZKJDNr7Vu4-TOKU5zcs9nhe-nlHDaL-F6aoTFsCJCl0VJoMibwC1ZKHbbyvnKu1_LvSGnepHgtRa8hz6VKnRd8u1q1MvHS2rxNydn2rxq0-smDk9EIQHpgUtB9RIA6dfKhcoCn0m8beezMRWDT6LTk4ixk1sh0tPskCK1Ja4pfZRg7UXs3B1jrnQE_S5o8YDsOEPAuHyhf2s7PjL6iT8R2VfKCMHasIMwwdMONFPqAvXI4vTUV5xS1jfXvTxiyOUgtabtyUGvcQO9D4naHQ0faUr-XoMWBFx9p1vYvKZbyQuSHsny-78UwD1Sm-zTsp5LSdVN9WlkF_jtZnvJbNdqd5DeWxyBrANkA0OeFb2RGOQi7JHmOsqJBYfhXaMW2KWAOYoH2cL1NKxnfKek1g8zSobTBqB4U3qQ0lYcWCPqr-gzHDDJJ5Jke46QGhIvFC1ayGKdxQZWbBrAKwtchk5G1vt-m-Jx1GRr8YPiIElRzmv8x-M-DeBPAt6YeedZUdPBvOY7btXR3lnpVC5rFd5InoNAqpTLV7kdSIfkmsKINZwNK98_L6768AiXnZAT8fMoES52RLTENUQcNIwS4v_LjVRcaXqoDjZYaXRYSsN9frZoBk9ItBGUnKU8Mzz0I_l45N4_iZAbwtKMWLeqkhQmSaCw5Spluxk5ytSc19SkUl09r504VnoB7ytKV_z_hg5Pr8r8N4D4432gP0GOyNVNuxKt572Nc80EYjO53DlzvZwCeD4dRFoU46Xqbh95GyJesmYQsVbmGkWTlvl9NINpEN3eb-SzVXEraLfuGWRgMMa3n3ou6uvWfZxv0VDE-L9l2JzfUsE5DLOGkA_Wg9sLl2UPdR_SK36ciSy0upEoob25qZqSk1I3cP-MQftJyjaeVqXBeIf9FaaSsI1HBNY2PpM6CEuRgyTIt3NA9ag_iIIABbpCrIw0REejXNFGXyX0sGtVzWYVdCI9d-2T5U0IsZjb-VobWbqRhZHB2cRiYusrKICLzP6aPzQ4tEmpCSLcrxy-86urWzU7pq6GuEbSwSZSAcDpDNsAj8EcW0GIHfq9Rl0clIJFkgcEow6VyxPTJgvstpp-nq5sFU8EtklBBEXFZYw");
        System.out.println(GsonUtil.fromJson(s, JSONObject.class));
    }

}